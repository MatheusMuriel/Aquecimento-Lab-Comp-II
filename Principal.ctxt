#BlueJ class context
comment0.target=Principal
comment0.text=\r\n\ Lista\ 1\ Laboratorio\ de\ Computacao\ II\r\n\r\n\ @author\ Arthur\ Berbert;\ Guilherme\ Rocha;\ Matheus\ Muriel\r\n\ @version\ 26/02/18\r\n
comment1.params=args
comment1.target=void\ main(java.lang.String[])
comment10.params=str
comment10.target=boolean\ isPalindromoSemEspaco(java.lang.String)
comment10.text=\r\n\ Compara\ se\ a\ frase\ \u00C3\u00A9\ um\ palindromo\ eleminando\ os\ espa\u00C3\u00A7os\ em\ branco.\r\n\r\n\ @param\ str\ \ \ o\ metodo\ tira\ os\ espa\u00C3\u00A7os\ entre\ as\ palavras.\r\n\r\n\r\n\ @return\ \ \ \ \ \ recebe\ verdadeiro\ ao\ menos\ que\ as\ palavras\ sejam\ diferentes,\ se\ caso\ for\ diferente\ recebe\ false.\r\n
comment11.params=palavras
comment11.target=void\ retornaPalindromos(java.lang.String[])
comment11.text=\r\n\ Metodo\ que\ recebe\ um\ arranjo\ de\ String\ e\ \r\n\ printa\ na\ tela\ os\ componentes\ dele\ que\ s\u00C3\u00A3o\ palindromos\r\n\ \r\n\ @param\ palavras\ \ arranjo\ de\ String\ contendo\ as\ palavras\r\n
comment12.params=
comment12.target=void\ numeroPalindromo()
comment12.text=\r\n\ Metodo\ que\ calcula\ todos\ os\ numeros\ palindromos\ de\ 0\ a\ 10000\r\n
comment2.params=n
comment2.target=int\ fibonacci(int)
comment2.text=\r\n\ Calcula\ o\ n-esimo\ valor\ da\ sequencia\ de\ fibonacci.\r\n\ \r\n\ @param\ n\ \ \ \ \ numero\ do\ elemento\ da\ sequencia.\ Obrigatoriamente\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ deve\ ser\ maior\ que\ 0.\ (n\ >\ 0)\r\n\r\n\ @return\ \ \ \ \ \ valor\ do\ n-esimo\ elemento.\r\n
comment3.params=n
comment3.target=int\ fibonacciRec(int)
comment4.params=vals
comment4.target=int\ somatorio(int[])
comment4.text=\r\n\ \ Metodo\ que\ recebe\ um\ arranjo\ de\ inteiros\ \r\n\ \ e\ retorna\ o\ calculo\ de\ todos\ os\ seus\ componentes\r\n\ \ \r\n\ @param\ vals\ \ Arranjo\ de\ inteiros\r\n\ @return\ soma\ de\ todos\ os\ componentes\r\n
comment5.params=vals
comment5.target=int\ segundoTerceiro(int[])
comment5.text=\r\n\ Metodo\ que\ retorna\ o\ segundo\ e\ o\ terceiro\r\n\ maior\ componente\ do\ arranjo\r\n\ \r\n\ @param\ vals\ \ arranjo\ de\ inteiros\r\n\ @return\r\n
comment6.params=str\ delim
comment6.target=java.lang.String\ dePrimeiroDelimAoFim(java.lang.String,\ char)
comment6.text=\r\n\ Manipula\ a\ String\ para\ retornar\ todo\ conte\u00C3\u00BAdo\ ap\u00C3\u00B3s\ a\ primeira\ apari\u00C3\u00A7\u00C3\u00A3o\ de\ uma\ car\u00C3\u00A1cter.\r\n\r\n\ @param\ str\ \ \ gera\ uma\ substring\ com\ o\ conte\u00C3\u00BAdo\ da\ string\ apartir\ do\ ponto\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ em\ que\ aparece\ o\ char.\r\n\r\n\ @param\ delim\ car\u00C3\u00A1cter\ delimitador.\r\n\r\n\ @return\ \ \ \ \ \ substring\ gerada.\r\n
comment7.params=str\ delim
comment7.target=java.lang.String\ deUltimoDelimAoFim(java.lang.String,\ char)
comment7.text=\r\n\ Manipula\ a\ String\ para\ retornar\ todo\ o\ conte\u00C3\u00BAdo\ ap\u00C3\u00B3s\ a\ ultima\ apari\u00C3\u00A7\u00C3\u00A3o\ do\ car\u00C3\u00A1cter.\r\n\r\n\ @param\ str\ \ \ gera\ uma\ substring\ com\ o\ conte\u00C3\u00BAdo\ da\ string\ apartir\ do\ ponto\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ da\ ultima\ apari\u00C3\u00A7\u00C3\u00A3o\ do\ char.\r\n\r\n\ @param\ delim\ car\u00C3\u00A1cter\ delimitador.\r\n\r\n\ @return\ \ \ \ \ \ substring\ gerada.\r\n
comment8.params=str\ delim
comment8.target=java.lang.String\ entreDelims(java.lang.String,\ char)
comment8.text=\r\n\ Manipula\ a\ String\ para\ retornar\ todo\ o\ conte\u00C3\u00BAdo\ entre\ a\ primeira\ e\ ultima\ apari\u00C3\u00A7\u00C3\u00A3o\ do\ car\u00C3\u00A1cter.\r\n\r\n\ @param\ str\ \ \ gera\ uma\ substring\ com\ o\ conte\u00C3\u00BAdo\ da\ string\ entre\ o\ primeiro\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ e\ ultimo\ char.\r\n\r\n\ @param\ delim\ car\u00C3\u00A1cter\ delimitador.\r\n\r\n\ @return\ \ \ \ \ \ substring\ gerada.\r\n
comment9.params=str
comment9.target=boolean\ isPalindromo(java.lang.String)
comment9.text=\r\n\ verifica\ se\ a\ palavra\ passada\ por\ parametros\ \u00C3\u00A9\ um\ palindromo.\r\n\r\n\ @param\ str\ \ String\ que\ vai\ receber\ a\ palavra\ a\ ser\ testada.\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ le\ a\ palavra\ e\ comparar\ de\ tras\ pra\ frente.\r\n\r\n\ @return\ \ \ \ \ \ recebe\ verdadeiro\ ao\ menos\ que\ as\ palavras\ sejam\ diferentes,\ se\ caso\ for\ diferente\ recebe\ false.\r\n
numComments=13
